<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/10/03/hello-world/"/>
      <url>/2021/10/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS高级应用</title>
      <link href="/2021/06/23/HTML/CSS%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
      <url>/2021/06/23/HTML/CSS%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一-过渡"><a href="#一-过渡" class="headerlink" title="一.过渡"></a>一.过渡</h2><h4 id="1-transition-property属性"><a href="#1-transition-property属性" class="headerlink" title="1.transition-property属性"></a>1.transition-property属性</h4><p>transition-property属性用于指定应用过渡效果的css属性的名称，其过渡效果通常在用户将指针移动到元素上时发生。。基本语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">transition-property:none | all | property;<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">none</td><td align="center">莫有属性会获得过渡效果</td></tr><tr><td align="center">all</td><td align="center">所有属性会获得过渡效果</td></tr><tr><td align="center">property</td><td align="center">用户指定应用过渡效果的css属性的名称，多个名称之间用逗号隔开。</td></tr></tbody></table><span id="more"></span><h4 id="2-transition-duration属性"><a href="#2-transition-duration属性" class="headerlink" title="2.transition-duration属性"></a>2.transition-duration属性</h4><p>transition-duration属性用于定义过渡效果花费的时间，默认值为0，常用单位为秒(s)或毫秒(ms)，其基本语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">transition-duration:time;<br></code></pre></td></tr></table></figure><h4 id="3-transition-timing-function属性"><a href="#3-transition-timing-function属性" class="headerlink" title="3.transition-timing-function属性"></a>3.transition-timing-function属性</h4><p>transition-timing-function属性规定过渡效果的速度曲线，默认为“ease”，其基本语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">transition-timing-function:linear | ease | ease-in | ease-out | ease-in-out | cubic-bezier(n,n,n,n);<br></code></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>linear</td><td>指定以相同速度开始至结束的过渡效果，等同于cubic-bezier(0,0,1,1))</td></tr><tr><td>ease</td><td>指定以慢速开始，然后加快，最后慢慢结束的过渡效果，等同于 cubic-bezier(0.25,0.1,0.25,1)</td></tr><tr><td>ease-in</td><td>指定以慢速开始，然后逐渐加快（淡入效果）的过渡效果，等同于 cubic-bezier(0.42,0,1,1)</td></tr><tr><td>ease-out</td><td>指定以慢速结束（淡出效果）的过渡效果，等同于 cubic-bezier (0,0,0.58,1)</td></tr><tr><td>ease-in-out</td><td>指定以慢速开始和结束的过渡效果，等同于cubic-bezier(0.42,0，0.58，1)</td></tr><tr><td>cubic-bezier(n,n,n,n)</td><td>定义用于加速或者减速的贝塞尔曲线的形状，它们的值在0~1</td></tr></tbody></table><h4 id="4-transition-delay属性"><a href="#4-transition-delay属性" class="headerlink" title="4.transition-delay属性"></a>4.transition-delay属性</h4><p>transition-delay属性规定过渡效果从何时开始，默认值为0，其语法格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">transition-delay:time;<br></code></pre></td></tr></table></figure><h4 id="5-transition属性"><a href="#5-transition属性" class="headerlink" title="5.transition属性"></a>5.transition属性</h4><p>transition属性是一个复合属性，用于在一个属性中设置transition-property，transition-duration，transition-timing-function，transition-delay四个过度属性，其语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">transition: property duration timing-function delay;<br></code></pre></td></tr></table></figure><p>注：</p><p>参数必须按照此顺序，不能颠倒。</p><h2 id="二-变形"><a href="#二-变形" class="headerlink" title="二.变形"></a>二.变形</h2><h3 id="1-认识transform"><a href="#1-认识transform" class="headerlink" title="1.认识transform"></a>1.认识transform</h3><p>CSS3的变形属性可以让元素在一个坐标系统中变形。这个属性包含一系列变形函数，可以进行元素的移动，旋转和缩放。其基本语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">transform:none | transform-functions;<br></code></pre></td></tr></table></figure><p>上述语法格式中，transform属性的默认值为none，适用于内联元素和块元素，表示不进行变形。</p><p>1.matrix():定义矩形变换，即基于X和Y坐标重新定位元素的位置。</p><p>2.translate():移动元素对象，即基于X和Y坐标重新定位元素。</p><p>3.scale():缩放元素对象，可以是任意元素对象尺寸发生变化，取值包括正数，负数和小数。</p><p>4.rotate();旋转元素对象，取值为一个度数值。</p><p>5.skew();倾斜元素对象，取值为一个度数值。</p><h3 id="2-2D转换"><a href="#2-2D转换" class="headerlink" title="2.2D转换"></a>2.2D转换</h3><h4 id="1-平移"><a href="#1-平移" class="headerlink" title="1.平移"></a>1.平移</h4><p>使用translate()方法能重新定义元素的坐标，实现平移效果。其基本语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">transform:translate (x-value,y-value);<br></code></pre></td></tr></table></figure><h4 id="2-缩放"><a href="#2-缩放" class="headerlink" title="2.缩放"></a>2.缩放</h4><p>scale()方法用于缩放元素大小，该函数包含两个参数值。其基本语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">transform:scale(x-axis,y-axis);<br></code></pre></td></tr></table></figure><h4 id="3-倾斜"><a href="#3-倾斜" class="headerlink" title="3.倾斜"></a>3.倾斜</h4><p>skew()方法能狗让元素倾斜显示，基本如法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">transform:skew(x-axis,y-axis);<br></code></pre></td></tr></table></figure><h4 id="4-旋转"><a href="#4-旋转" class="headerlink" title="4.旋转"></a>4.旋转</h4><p>rotate()方法能够旋转指定元素对象，当传入负值时，逆时针旋转。其基本语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">transform:rotate(angle);<br></code></pre></td></tr></table></figure><h4 id="5-更改变换的中心点"><a href="#5-更改变换的中心点" class="headerlink" title="5.更改变换的中心点"></a>5.更改变换的中心点</h4><p>通过transform设置的属性都是以元素的中心点为基准进行的，如果需要改变这个中心的，可以使用transform-origin属性，其基本语法元素如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">transform-origin:x-axis y-axis z-axis;<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">x-axis</td><td align="center">定义视图被置于X轴的何处，可能的值为：1.left 2.center 3.right 4.length 5.%</td></tr><tr><td align="center">y-axis</td><td align="center">定义视图被置于Y轴的何处，可能的值为：1.top 2.center 3.bottom 4.length 5.%</td></tr><tr><td align="center">z-axis</td><td align="center">定义视图被置于Z轴的何处，可能的值为：1.length</td></tr></tbody></table><h3 id="3-3D旋转"><a href="#3-3D旋转" class="headerlink" title="3.3D旋转"></a>3.3D旋转</h3><h4 id="1-rotateX-方法"><a href="#1-rotateX-方法" class="headerlink" title="1.rotateX()方法"></a>1.rotateX()方法</h4><p>rotateX()函数用于指定元素围绕X轴旋转，其基本语法元素如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">rotate:rotateX(a);<br></code></pre></td></tr></table></figure><h4 id="2-rotateY-方法"><a href="#2-rotateY-方法" class="headerlink" title="2.rotateY()方法"></a>2.rotateY()方法</h4><p>rotateY()函数用于指定元素围绕X轴旋转，其基本语法元素如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">rotate:rotateY(a);<br></code></pre></td></tr></table></figure><h4 id="3-rotate3D-方法"><a href="#3-rotate3D-方法" class="headerlink" title="3.rotate3D()方法"></a>3.rotate3D()方法</h4><p>其基本语法元素如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">rotate3d:(x,y,z,angle);<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">属性名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">transform</td><td align="center">向元素应用2D或3D转换</td></tr><tr><td align="center">transform-origin</td><td align="center">允许改变被转换元素的位置</td></tr><tr><td align="center">transform-style</td><td align="center">规定被嵌套元素如何在3D空间中显示</td></tr><tr><td align="center">perspective</td><td align="center">规定3D元素中的透视效果</td></tr><tr><td align="center">perspective-origin</td><td align="center">规定3D元素的底部位置</td></tr><tr><td align="center">perspective-visibility</td><td align="center">定义元素在不面对屏幕时是否可见</td></tr></tbody></table><h2 id="3-动画"><a href="#3-动画" class="headerlink" title="3.动画"></a>3.动画</h2><h3 id="1-keyframes"><a href="#1-keyframes" class="headerlink" title="1.@keyframes"></a>1.@keyframes</h3><p>使用动画之前必须先定义一个关键帧，一个关键帧表示一个动画过程中的一个状态。其语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">@keyframes animationname&#123;<br>@keyframes-selector&#123;css-styles;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>1.animationname:表示当前动画的名称，不能为空。</p><p>2.@keyframes-selector：关键帧选择器，即指定当前关键帧要应用到整个动画中的位置，值可以是百分比，from或者to。</p><p>3.css-styles:定义执行到当前动画帧是对应的动画状态，多个属性间用分号分隔。</p><h3 id="2-animation-name：属性"><a href="#2-animation-name：属性" class="headerlink" title="2.animation-name：属性"></a>2.animation-name：属性</h3><p>animation-name属性用于定义要应用的动画名称，为@keyframes动画规定名称。其基本语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">animation-name:keyframename | none;<br></code></pre></td></tr></table></figure><p>适用于所有块内元素和行内元素。</p><h3 id="3-animation-duration属性"><a href="#3-animation-duration属性" class="headerlink" title="3.animation-duration属性"></a>3.animation-duration属性</h3><p>animation-duration属性用于定义整个动画效果完成所需要的时间，以秒或毫秒计，其基本语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">animation-duration:time;<br></code></pre></td></tr></table></figure><h3 id="4-animation-timing-function属性"><a href="#4-animation-timing-function属性" class="headerlink" title="4.animation-timing-function属性"></a>4.animation-timing-function属性</h3><p>animation-timing-function属性用来规定动画速度的曲线，可以定义使用哪种方式来执行动画效果。基本语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">animation-timing-function:value;<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">linear</td><td align="center">动画从头到尾的速度是相同的</td></tr><tr><td align="center">ease</td><td align="center">默认。动画以低速开始，然后加快，以慢速结尾</td></tr><tr><td align="center">ease-in</td><td align="center">动画以低速开始</td></tr><tr><td align="center">ease-out</td><td align="center">动画以低速结束</td></tr><tr><td align="center">ease-in-out</td><td align="center">动画以低速开始和结束</td></tr><tr><td align="center">cubic-bezier(n,n,n,n)</td><td align="center">在该函数中自己的值。可能的值是从0到1的数值</td></tr></tbody></table><h3 id="5-animation-delay属性"><a href="#5-animation-delay属性" class="headerlink" title="5.animation-delay属性"></a>5.animation-delay属性</h3><p>animation-delay属性用于定义执行动画效果之前延迟的时间，及动画神魔时候开始。基本语法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">animation-delay:time;<br></code></pre></td></tr></table></figure><h3 id="6-animation-iteration-count属性"><a href="#6-animation-iteration-count属性" class="headerlink" title="6.animation-iteration-count属性"></a>6.animation-iteration-count属性</h3><p>animation-iteration-count属性用于定义动画的播放次数，基本语法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">animation-iteration-count:number | infinite;<br></code></pre></td></tr></table></figure><h3 id="7-animation-direction属性"><a href="#7-animation-direction属性" class="headerlink" title="7.animation-direction属性"></a>7.animation-direction属性</h3><p>animation-direction属性定义当前动画的播放方向，及动画播放完成后是否逆向交替循环，基本语法格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">animation-direction:normal | alternate;<br></code></pre></td></tr></table></figure><h3 id="8-animation-属性"><a href="#8-animation-属性" class="headerlink" title="8.animation 属性"></a>8.animation 属性</h3><p>将所有属性放在一起定义，其基本语法格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">anmiation:animation-name animation-duration animation-timing-function animation-delay animation-iteration-count animation-direction<br></code></pre></td></tr></table></figure><p>必须指定animation-name和animation-duration属性，否则持续时间为0，永远不会动画播放。</p>]]></content>
      
      
      <categories>
          
          <category> HTML学习 </category>
          
          <category> css学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> CSS高级应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多媒体技术</title>
      <link href="/2021/06/23/HTML/%E5%A4%9A%E5%AA%92%E4%BD%93%E6%8A%80%E6%9C%AF/"/>
      <url>/2021/06/23/HTML/%E5%A4%9A%E5%AA%92%E4%BD%93%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="一-在HTML中嵌入视频"><a href="#一-在HTML中嵌入视频" class="headerlink" title="一.在HTML中嵌入视频"></a>一.在HTML中嵌入视频</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;video src=&quot;视频文件路径&quot; controls=&quot;controls&quot;&gt;&lt;/video&gt;<br></code></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>autoplay</td><td>autoplay</td><td>当页面载入完成后自动播放视频。</td></tr><tr><td>loop</td><td>loop</td><td>视频结束时重新开始播放。</td></tr><tr><td>preload</td><td>auto/meta/ none</td><td>如果出现该属性，则视频在页面加载时进行加载，并预备播 放。如果使用”autoplay”，则忽略该属性。</td></tr><tr><td>poster</td><td>url</td><td>当视频缓冲不足时，该属性值链接一个图像，并将该图像按 照一定的比例显示出来。</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;video src=&quot;视频文件路径&quot; controls=&quot;controls&quot; autoplay=&quot;autoplay&quot; loop=&quot;loop&quot;&gt;&lt;/video&gt;<br></code></pre></td></tr></table></figure><span id="more"></span><h3 id="2-在HTML中嵌入音频"><a href="#2-在HTML中嵌入音频" class="headerlink" title="2.在HTML中嵌入音频"></a>2.在HTML中嵌入音频</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;audio src=&quot;音频文件路径&quot; controls=&quot;controls&quot;&gt;&lt;/audio&gt;<br></code></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>autoplay</td><td>autoplay</td><td>当页面载入完成后自动播放视频。</td></tr><tr><td>loop</td><td>loop</td><td>视频结束时重新开始播放。</td></tr><tr><td>preload</td><td>auto/meta/ none</td><td>如果出现该属性，则视频在页面加载时进行加载，并预备播 放。如果使用”autoplay”，则忽略该属性。</td></tr><tr><td>poster</td><td>url</td><td>当视频缓冲不足时，该属性值链接一个图像，并将该图像按 照一定的比例显示出来。</td></tr></tbody></table><h3 id="3-视频和音频的方法"><a href="#3-视频和音频的方法" class="headerlink" title="3.视频和音频的方法"></a>3.视频和音频的方法</h3><h4 id="1-video和audio的方法"><a href="#1-video和audio的方法" class="headerlink" title="1.video和audio的方法"></a>1.video和audio的方法</h4><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>load()</td><td>加载媒体文件，为播放做准备。通常用于播放前的预加载，也会用于重新 加载媒体文件</td></tr><tr><td>play()</td><td>播放媒体文件。如果视频没有加载，则加载并播放；如果视频是暂停的， 则变为播放</td></tr><tr><td>pause()</td><td>暂停播放媒体文件</td></tr><tr><td>canPlayType()</td><td>测试浏览器是否支持指定的媒体类型</td></tr></tbody></table><h4 id="2-video和audio的事件"><a href="#2-video和audio的事件" class="headerlink" title="2.video和audio的事件"></a>2.video和audio的事件</h4><table><thead><tr><th>事件</th><th>描述</th></tr></thead><tbody><tr><td>play</td><td>当执行方法 play0时勉发</td></tr><tr><td>playing</td><td>正在播放时射发</td></tr><tr><td>pause</td><td></td></tr><tr><td>tianeupdate</td><td>当播放位置被改变时就发</td></tr><tr><td>eeded</td><td>当播放结束后停上播放时能发</td></tr><tr><td>waiting</td><td>在等待加载下一优时触发</td></tr><tr><td>rarcchange</td><td>在当前播放速率改变时角发</td></tr><tr><td>volumechange</td><td>在音量改变时发</td></tr><tr><td>canplay</td><td>以当前播战速率，需要缓冲时魅发</td></tr><tr><td>canplaythrough</td><td>以当前播放速率，不需要缓冲时发</td></tr><tr><td>durationchange</td><td>当活放时长改变时烛发</td></tr><tr><td>loadstart</td><td>在浏览器开始在网上子找数据时触发</td></tr><tr><td>progress</td><td>当浏览器正在获取媒体文件时魁发</td></tr><tr><td>supcnd</td><td>当浏览著暂停获取媒体文件，且文件获取并没有正常结束时触发</td></tr><tr><td>abort</td><td>当中止获取媒体数据时触发。但这种中止不是由错误引起的</td></tr><tr><td>error</td><td>当获取媒体过程中出铝时触发</td></tr><tr><td>cmpbjed</td><td>当所在网络变为初始化状态时地发</td></tr><tr><td>stalled</td><td>浏象器尝试获取媒体数据失收时祛发</td></tr><tr><td>loadedmetadata</td><td>在加载完媒体元数据时热发</td></tr><tr><td>loadeddata</td><td>在加载完当前位置的媒体播放数据时触发</td></tr><tr><td>seeking</td><td>浏览器正在请求数据时勉发</td></tr><tr><td>seeked</td><td>浏览器停止请求数据时触发</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> HTML学习 </category>
          
          <category> css学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> 多媒体技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表单的应用</title>
      <link href="/2021/06/23/HTML/%E8%A1%A8%E5%8D%95%E7%9A%84%E5%BA%94%E7%94%A8/"/>
      <url>/2021/06/23/HTML/%E8%A1%A8%E5%8D%95%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一-认知表单"><a href="#一-认知表单" class="headerlink" title="一.认知表单"></a>一.认知表单</h2><h3 id="1-创建表单"><a href="#1-创建表单" class="headerlink" title="1.创建表单"></a>1.创建表单</h3><p>在HTML中，<from></from>标记被用于定义表单域，及创建一个表单，基本语法如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;url地址&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;提交方式&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;表单名称&quot;</span>&gt;</span><br>       各种表单控件<br>   <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><span id="more"></span><h3 id="2-表单属性"><a href="#2-表单属性" class="headerlink" title="2.表单属性"></a>2.表单属性</h3><h4 id="1-actions属性"><a href="#1-actions属性" class="headerlink" title="1.actions属性"></a>1.actions属性</h4><p>在表单收集到信息后，需要将信息传递给服务器进行处理，action属性用于指定接收并处理表单数据的服务器程序的url地址。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;form action=&quot;form action.asp&quot;&gt;<br></code></pre></td></tr></table></figure><p>  表示当提交表单时，表单数据会传送到名为”form_action.asp”的页面去处理。action 的属性值可以是相对路径或绝对路径，还可以为接收数据的E-mail邮箱地址。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;form action=mailto:htmlcss@163.com&gt;<br></code></pre></td></tr></table></figure><h4 id="2-method-属性"><a href="#2-method-属性" class="headerlink" title="2.method 属性"></a>2.method 属性</h4><p>method属性用于设置表单数据的提交方式，其取值为get或post。在HTML5中，可以通过form标记的method属性指明表单处理服务器处理数据的方法，示例代码如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;form action=&quot;form action.asp&quot; method=&quot;get&quot;&gt;<br></code></pre></td></tr></table></figure><h4 id="3-name属性"><a href="#3-name属性" class="headerlink" title="3.name属性"></a>3.name属性</h4><p>name属性用于指定表单的名称，以区分同一个页面中的多个表单。</p><h4 id="4-autocomplete-属性"><a href="#4-autocomplete-属性" class="headerlink" title="4.autocomplete 属性"></a>4.autocomplete 属性</h4><p>autocomplete属性用于指定表单是否有自动完成功能。所谓“自动完成”是指将表单控件输入的内容记录下来，当再次输入时，会将输入的历史记录显示在一个下拉列表里，以实现自动完成输入。</p><h5 id="autocomplete属性有2个值，对它们的解释如下。"><a href="#autocomplete属性有2个值，对它们的解释如下。" class="headerlink" title="autocomplete属性有2个值，对它们的解释如下。"></a>autocomplete属性有2个值，对它们的解释如下。</h5><p>1.on：表单有自动完成功能。<br>2.off：表单无自动完成功能。</p><h4 id="5-novalidate属性"><a href="#5-novalidate属性" class="headerlink" title="5.novalidate属性"></a>5.novalidate属性</h4><p>novalidate属性指定在提交表单时取消对表单进行有效的检查。为表单设置该属性，可以关闭整个表单的验证，这样可以使form内的所有表单控件不被验证。</p><h3 id="3-input元素及属性"><a href="#3-input元素及属性" class="headerlink" title="3.input元素及属性"></a>3.input元素及属性</h3><p>input元素常见属性如下表：</p><table><thead><tr><th>属性</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td></td><td>text</td><td>单行文本输入框</td></tr><tr><td></td><td>password</td><td>密码输入框</td></tr><tr><td></td><td>radio</td><td>单选按钮</td></tr><tr><td></td><td>checkbox</td><td>复选框</td></tr><tr><td></td><td>button</td><td>普通按钮</td></tr><tr><td></td><td>submit</td><td>提交按钮</td></tr><tr><td>type</td><td>reset</td><td>重置按钮</td></tr><tr><td></td><td>image</td><td>图像形式的提交按钮</td></tr><tr><td></td><td>hidden</td><td>隐藏域</td></tr><tr><td></td><td>file</td><td>文件域</td></tr><tr><td></td><td>email</td><td>E-mail 地址的输入域</td></tr><tr><td></td><td>url</td><td>URL地址的输入域</td></tr><tr><td></td><td>number</td><td>数值的输入域</td></tr></tbody></table><table><thead><tr><th>属性</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td></td><td>range</td><td>一定范围内数字值得输入域</td></tr><tr><td></td><td>Date pickers (date, month, week. time,datetime,datetime-local)</td><td>日期和时间的输入类型</td></tr><tr><td></td><td>search</td><td>搜索域</td></tr><tr><td></td><td>color</td><td>颜色输入类型</td></tr><tr><td></td><td>tel</td><td>电话号码输入类型</td></tr><tr><td>name</td><td>由用户自定义</td><td>控件的名称</td></tr><tr><td>value</td><td>由用户自定义</td><td>input 控件中的默认文本值</td></tr><tr><td>size</td><td>正整数</td><td>input 控件在页面中的显示宽度</td></tr><tr><td>readonly</td><td>readonly</td><td>该控件内容为只读（不能编辑修改）</td></tr><tr><td>disabled</td><td>disabled</td><td>第一次加载页面时禁用该控件(显示为 灰色）</td></tr><tr><td>checked</td><td>checked</td><td>定义选择控件默认被选中的项</td></tr><tr><td>maxlength</td><td>正整数</td><td>控件允许输入的最多字符数</td></tr><tr><td>autocomplete</td><td>on/off</td><td>设定是否自动完成表单字段内容</td></tr><tr><td>autofocus</td><td>autofocus</td><td>指定页面加载后是否自动获取焦点</td></tr><tr><td>form</td><td>form元素的id</td><td>设定字段隶属于哪一个或多个表单</td></tr><tr><td>list</td><td>datalist 元素的id</td><td>指定字段的候选数据值列表</td></tr><tr><td>multiple</td><td>multiple</td><td>指定输入框是否可以选择多个值</td></tr><tr><td>min、max和 step</td><td>数值</td><td>规定输入框所允许的最大值、最小值及 间隔</td></tr><tr><td>pattern</td><td>字符串</td><td>验证输入的内容是否与定义的正则表 达式匹配</td></tr><tr><td>placeholder</td><td>字符串</td><td>为input类型的输入框提供一种提示</td></tr><tr><td>required</td><td>required</td><td>规定输入框填写的内容不能为空</td></tr></tbody></table><h3 id="2-input元素的其他属性"><a href="#2-input元素的其他属性" class="headerlink" title="2.input元素的其他属性"></a>2.input元素的其他属性</h3><h4 id="1-autofocus属性"><a href="#1-autofocus属性" class="headerlink" title="1.autofocus属性"></a>1.autofocus属性</h4><p>autofocus属性用于指定页面加载后是否获得焦点。</p><h4 id="2-list属性"><a href="#2-list属性" class="headerlink" title="2.list属性"></a>2.list属性</h4><p>list属性用于指定输入框所绑定的datalist属性，其值是某个datalist元素的id。</p><h4 id="3-multiple属性"><a href="#3-multiple属性" class="headerlink" title="3.multiple属性"></a>3.multiple属性</h4><p>multiple属性指定输入框可以选择多个值，该属性是用于Email和file类型的元素。</p><h4 id="4-pattern属性"><a href="#4-pattern属性" class="headerlink" title="4.pattern属性"></a>4.pattern属性</h4><p>pattern属性用于验证input类型输入框中，用户输入的内容是否与所定义的正则表达式相匹配。</p><table><thead><tr><th>正则表达式</th><th>说明</th></tr></thead><tbody><tr><td>^[0-9]*$</td><td>数字</td></tr><tr><td>^\d{n}$</td><td>n位的数字</td></tr><tr><td>^\d{n,}$</td><td>至少n位的数字</td></tr><tr><td>^\d{m,n}$</td><td>m-n位的数字</td></tr><tr><td>^(0 | [1-9][0-9]*)$</td><td>零和非零开头的数字</td></tr><tr><td>^([1-9][0-9]*)+(.<a href="1%EF%BC%8C2">0-9</a>)?$</td><td>非零开头的最多带两位小数的数字</td></tr><tr><td>“(-|+)?\d+(.\d+)?$</td><td>正数、负数和小数</td></tr><tr><td>^\d+S或“[1-9]\d*|0$</td><td>非负整数</td></tr><tr><td>^-[1-9]\d*|0S或~((-\d+）|(0+))$</td><td>非正整数</td></tr><tr><td>^u4e00-\u9fa5]{0，}￥</td><td>汉字</td></tr><tr><td>^[A-Za-z0-9]+$或“[A-Za-z0-9]{4,40}$</td><td>英文和数字</td></tr><tr><td>^[A-Za-z]+$</td><td>由26个英文字母组成的字符串</td></tr><tr><td>^[A-Za-z0-9]+$</td><td>由数字和26个英文字母组成的字符串</td></tr><tr><td>^\w+S或\w{3，20}$</td><td>由数字、26个英文字母或者下划线组 成的字符串</td></tr><tr><td>^[\u4E00-\u9FA5A-Za-z0-9_]+$</td><td>中文、英文、数字包括下划线</td></tr><tr><td>^\w+(l-+.J\w+)*@\w+([-J\w＋)<em>.\w+(l-.j\w+)</em>$</td><td>E-mail 地址</td></tr><tr><td>[a-zA-z]+://[\s]<em>或“http://([\w-]+.)+[w-J+( [w-./2%&amp;=]</em>)?$</td><td>URL地址</td></tr><tr><td>^\d（15)\d（18)$</td><td>身份证号（15位、18位数字）</td></tr><tr><td>^([0-9])(7，18](x|X）?S或~\d（8,18）|[0-9x][818)1 <a href="8,18">0-9X</a>?$</td><td>以数字、字母x结尾的短身份证号码</td></tr><tr><td>^[a-zA-Z][a-zA-Z0-9_]（4,15)$</td><td>账号是否合法(字母开头，允许5~ 16字节，允许字母数字下划线）</td></tr><tr><td>^[a-zA-Z]\w(5,17)$</td><td>密码(以字母开头，长度为6～18. 只能包含字母、数字和下划线）</td></tr></tbody></table><h4 id="5-placeholder属性"><a href="#5-placeholder属性" class="headerlink" title="5.placeholder属性"></a>5.placeholder属性</h4><p>placeholder属性用于为input类型的输入框提供相关提示信息，以描述输入框期待用户输入何种内容。在输入框为空时显示出现，而当输入框获得焦点时则消失。</p><h4 id="6-required属性"><a href="#6-required属性" class="headerlink" title="6.required属性"></a>6.required属性</h4><p>required属性用于规定输入框填写的内容不能为空，否则不允许用户提交表单。</p><h3 id="四-其他表单元素"><a href="#四-其他表单元素" class="headerlink" title="四.其他表单元素"></a>四.其他表单元素</h3><h3 id="1-textarea元素"><a href="#1-textarea元素" class="headerlink" title="1.textarea元素"></a>1.textarea元素</h3><p>当定义input控件的type属性值为text时，可以创建一个单行文本输入框。通过textarea控件可以轻松地创建多行文本输入框，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;每行中的字符数&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;显示的行数&quot;</span>&gt;</span><br>       文本内容<br>   <span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">属性</th><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">name</td><td align="center">由用户定义</td><td align="center">控件的名称</td></tr><tr><td align="center">readonly</td><td align="center">readonly</td><td align="center">该控件内容为只读(不可编辑)</td></tr><tr><td align="center">disabled</td><td align="center">disabled</td><td align="center">第一次加载页面时禁用该控件</td></tr></tbody></table><h3 id="2-select元素"><a href="#2-select元素" class="headerlink" title="2.select元素"></a>2.select元素</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;select name=&quot;&quot; id=&quot;&quot;&gt;<br>       &lt;option value=&quot;&quot;&gt;&lt;/option&gt;<br>       &lt;option value=&quot;&quot;&gt;&lt;/option&gt;<br>       &lt;option value=&quot;&quot;&gt;&lt;/option&gt;<br>   &lt;/select&gt;<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">标记名</th><th align="center">常用属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">select</td><td align="center">size</td><td align="center">指定下拉菜单的可见选项数</td></tr><tr><td align="center"></td><td align="center">multiple</td><td align="center">定义 multiple=”multiple”时，下拉菜单将具有多选择的功能，方法为按住Ctrl键同时选择多项</td></tr><tr><td align="center"><option></td><td align="center">selected</td><td align="center">定义selected=”selected”时，当前相机默认选择项。</td></tr></tbody></table><h4 id="3-keygen-元素"><a href="#3-keygen-元素" class="headerlink" title="3 .keygen 元素"></a>3 .keygen 元素</h4><p>keygen元素用于表单的密钥生成器，能够使用户验证更为安全、可靠。当提交表单时会生成两个键：一个是私钥，它存储在客户端；另一个是公钥，它被发送到服务器，验证用户的客户端证书。如果新的浏览器能够对keygen元素的支持度再增强一些，则有望使其成为一种有用的安全标准。</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>autofocus</td><td>使 keygen 字段在页面加载时获得焦点</td></tr><tr><td>challenge</td><td>如果使用，则将keygen的值设置为在提交时询问</td></tr><tr><td>disabled</td><td>禁用 keytag 字段</td></tr><tr><td>form</td><td>定义该keygen 字段所属的一个或多个表单</td></tr><tr><td>keytype</td><td>定义keytype。rsa生成RSA密钥</td></tr><tr><td>name</td><td>定义 keygen 元素的唯一名称。name属性用于在提交表单时搜集字段的值</td></tr></tbody></table><h4 id="4-output元素"><a href="#4-output元素" class="headerlink" title="4.output元素"></a>4.output元素</h4><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>for</td><td>定义输出域相关的一个或多个元素</td></tr><tr><td>form</td><td>定义输入字段所属的一个或多个表单</td></tr><tr><td>name</td><td>定义对象的唯一名称</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> HTML学习 </category>
          
          <category> css学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> 表单的应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浮动与定位</title>
      <link href="/2021/06/22/HTML/%E6%B5%AE%E5%8A%A8%E4%B8%8E%E5%AE%9A%E4%BD%8D/"/>
      <url>/2021/06/22/HTML/%E6%B5%AE%E5%8A%A8%E4%B8%8E%E5%AE%9A%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="一-元素的浮动"><a href="#一-元素的浮动" class="headerlink" title="一.元素的浮动"></a>一.元素的浮动</h2><h3 id="1-元素的浮动元素float"><a href="#1-元素的浮动元素float" class="headerlink" title="1.元素的浮动元素float"></a>1.元素的浮动元素float</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">选择器&#123;<br>float：属性值;<br>&#125;<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">left</td><td align="center">元素向左浮动</td></tr><tr><td align="center">right</td><td align="center">元素向右浮动</td></tr><tr><td align="center">none</td><td align="center">元素不浮动</td></tr></tbody></table><span id="more"></span><h3 id="2-清除浮动"><a href="#2-清除浮动" class="headerlink" title="2.清除浮动"></a>2.清除浮动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">选择器&#123;<br>clear：属性值;<br>&#125;<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">left</td><td align="center">不允许元素向左浮动</td></tr><tr><td align="center">right</td><td align="center">不允许元素向右浮动</td></tr><tr><td align="center">both</td><td align="center">同时清除两侧元素不浮动</td></tr></tbody></table><p>注：clear属性只能清楚元素左右两侧浮动的影响。并不能清楚子元素浮动对父元素的影响。</p><h5 id="1-使用空标记清除浮动"><a href="#1-使用空标记清除浮动" class="headerlink" title="1.使用空标记清除浮动"></a>1.使用空标记清除浮动</h5><p>可以是<div>,<p>,<hr />等。</p><h5 id="2-使用overflow属性清除浮动"><a href="#2-使用overflow属性清除浮动" class="headerlink" title="2.使用overflow属性清除浮动"></a>2.使用overflow属性清除浮动</h5><h5 id="3-使用after伪对象清除浮动"><a href="#3-使用after伪对象清除浮动" class="headerlink" title="3.使用after伪对象清除浮动"></a>3.使用after伪对象清除浮动</h5><p>(1)必须为清除浮动的元素伪对象设置”height：0；“样式，</p><p>(2)必须在伪对象中设置content属性，属性值可以为空。</p><h3 id="2-overflow属性"><a href="#2-overflow属性" class="headerlink" title="2.overflow属性"></a>2.overflow属性</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">选择器&#123;<br>overflow：属性值;<br>&#125;<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">visible</td><td align="center">内容不会被修剪，会呈现在元素框之外（默认）</td></tr><tr><td align="center">hidden</td><td align="center">溢出内容会被修剪，并且被修剪得内容是不显示的。</td></tr><tr><td align="center">auto</td><td align="center">在需要时产生滚动条，即自适应所要显示的内容。</td></tr><tr><td align="center">scroll</td><td align="center">溢出内容会被修剪，且浏览器会始终显示滚动条。</td></tr></tbody></table><h3 id="三-元素的定位"><a href="#三-元素的定位" class="headerlink" title="三.元素的定位"></a>三.元素的定位</h3><h4 id="1-元素的定位属性"><a href="#1-元素的定位属性" class="headerlink" title="1.元素的定位属性"></a>1.元素的定位属性</h4><h5 id="1-定位模式"><a href="#1-定位模式" class="headerlink" title="1.定位模式"></a>1.定位模式</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">选择器&#123;<br>position:属性值;<br>&#125;<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">static</td><td align="center">静态定位（默认）</td></tr><tr><td align="center">relative</td><td align="center">相对定位，相对于其源文档流的位置进行定位。</td></tr><tr><td align="center">absolute</td><td align="center">绝对定位，相对于其上一个已经定位的父元素进行定位。</td></tr><tr><td align="center">fixed</td><td align="center">固定定位，相对于浏览器窗口进行对位。</td></tr></tbody></table><h5 id="2-边偏移"><a href="#2-边偏移" class="headerlink" title="2.边偏移"></a>2.边偏移</h5><table><thead><tr><th align="center">边偏移属性</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">top</td><td align="center">顶端偏移量，定义元素相对于其父元素上边线的距离。</td></tr><tr><td align="center">bottom</td><td align="center">底端偏移量，定义元素相对于其父元素下边线的距离。</td></tr><tr><td align="center">left</td><td align="center">左端偏移量，定义元素相对于其父元素左边线的距离。</td></tr><tr><td align="center">right</td><td align="center">右端偏移量，定义元素相对于其父元素右边线的距离。</td></tr></tbody></table><h4 id="2-静态定位static"><a href="#2-静态定位static" class="headerlink" title="2.静态定位static"></a>2.静态定位static</h4><p>静态定位是元素默认定位方式，当position属性的取值为static时。可以将元素定位于静态位置。</p><h5 id="3-相对定位relative"><a href="#3-相对定位relative" class="headerlink" title="3.相对定位relative"></a>3.相对定位relative</h5><p>相对定位是将元素相对于它在标准文档流中的位置进行定位，当position属性的取值为relation时。可以将元素定位于相对位置。对元素设置相对定位后，可以通过边偏移属性改变元素的位置，但它在文档流中的位置依然保留。</p><h5 id="4-绝对定位absolute"><a href="#4-绝对定位absolute" class="headerlink" title="4.绝对定位absolute"></a>4.绝对定位absolute</h5><p>绝对定位是将元素依据最近的已经定位的父元素进行定位，若所有父元素都莫有定位，则依据body根元素进行定位。</p><h5 id="5-固定定位fixed"><a href="#5-固定定位fixed" class="headerlink" title="5.固定定位fixed"></a>5.固定定位fixed</h5><p>固定定位以浏览器窗口为参照物来定义网页元素。当元素设置固定定位后，他将脱离标准文档流的控制，始终一句浏览器窗口来定义自己的显示位置。</p><h5 id="6-z-index层叠等级属性"><a href="#6-z-index层叠等级属性" class="headerlink" title="6.z-index层叠等级属性"></a>6.z-index层叠等级属性</h5><p>z-index默认值为0，值越大，定位元素越居上。</p><p>注:</p><p>z-index属性仅对定位元素生效。</p><h3 id="四-元素的来性和转换"><a href="#四-元素的来性和转换" class="headerlink" title="四.元素的来性和转换"></a>四.元素的来性和转换</h3><h4 id="1-元素的类型"><a href="#1-元素的类型" class="headerlink" title="1.元素的类型"></a>1.元素的类型</h4><h4 id="1-块元素"><a href="#1-块元素" class="headerlink" title="1.块元素"></a>1.块元素</h4><p>块元素在页面中以区域块的形式出现，其特点是，每个块元素通常都会独自占据一整行或多整行，可以对其设置宽度、高度、对齐等属性，常用于网页布局和网页结构的搭建。<br>常见的块元素有<h1>~<h6>、<p>、<div>、<ul>、<ol>、<li>等，其中<div>标记是最典型的块元素。</p><h4 id="2-行内元素"><a href="#2-行内元素" class="headerlink" title="2.行内元素"></a>2.行内元素</h4><p>行内元素也称内联元素或内嵌元素，其特点是，不必在新的一行开始，同时，也不强迫其他元素在新的一行显示。一个行内元素通常会和它前后的其他行内元素显示在同一行中，它们不占有独立的区域，仅仅靠自身的字体大小和图像尺寸来支撑结构，一般不可以设置宽度、高度、对齐等属性，常用于控制页面中文本的样式。<br>常见的行内元素有<strong>、<b>、<em>、<i>、<del><s>、<ins>、<u>、<a>、<span>等，其中<span>标记是最典型的行内元素。</p><h4 id="2-元素的转换"><a href="#2-元素的转换" class="headerlink" title="2.元素的转换"></a>2.元素的转换</h4><p>网页是由多个块元素和行内元素构成的盒子排列而成的。如果希望行内元素具有块元素的某些特性，如可以设置宽高，或者需要块元素具有行内元素的某些特性，如不独占一行排列，可以使用display属性对元素的类型进行转换。</p><p>1.display属性常用的属性值及含义如下。<br>2.inline:此元素将显示为行内元素(行内元素默认的 display属性值)。<br>3.block:此元素将显示为块元素(块元素默认的display属性值)。<br>4.inline-block:此元素将显示为行内块元素，可以对其设置宽高和对齐等属性，但是该元素不会独占一行。<br>5.none：此元素将被隐藏，不显示，也不占用页面空间，相当于该元素不存在。</p>]]></content>
      
      
      <categories>
          
          <category> HTML学习 </category>
          
          <category> css学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> css浮动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS盒子模型</title>
      <link href="/2021/06/22/HTML/CSS%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
      <url>/2021/06/22/HTML/CSS%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="一-盒子模型的相关属性"><a href="#一-盒子模型的相关属性" class="headerlink" title="一.盒子模型的相关属性"></a>一.盒子模型的相关属性</h2><h3 id="1-边框属性"><a href="#1-边框属性" class="headerlink" title="1.边框属性"></a>1.边框属性</h3><table><thead><tr><th align="center">设置内容</th><th align="center">样式属性</th><th align="center">常用属性值</th></tr></thead><tbody><tr><td align="center">边框样式</td><td align="center">border-style：上边 【右边 下边 左边】；</td><td align="center">none 无（默认），solid 单实线，dashed 虚线，dotted 点线，double 双实线</td></tr><tr><td align="center">边框宽度</td><td align="center">border-swidth：上边 【右边 下边 左边】；</td><td align="center">像素值</td></tr><tr><td align="center">边框颜色</td><td align="center">border-color：上边 【右边 下边 左边】；</td><td align="center">颜色值，#十六进制，rgb(r,g,b),</td></tr><tr><td align="center">综合设置边框</td><td align="center">border：四边宽度 四边样式 四边颜色</td><td align="center"></td></tr><tr><td align="center">圆角边框</td><td align="center">border-radius：水平半径参数/垂直半径参数</td><td align="center">像素值或百分比</td></tr><tr><td align="center">图片边框</td><td align="center">border-images：图片路径 裁切方式/边框宽度/边框扩展距离 重复方式</td><td align="center"></td></tr></tbody></table><span id="more"></span><h5 id="图片边框"><a href="#图片边框" class="headerlink" title="图片边框"></a>图片边框</h5><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">border-image-soursse</td><td align="center">指定图片路径</td></tr><tr><td align="center">border-image-slice</td><td align="center">指定边框图像顶部，右部，底部，左侧内测偏移</td></tr><tr><td align="center">border-image-width</td><td align="center">指定边框宽度</td></tr><tr><td align="center">border-image-outset</td><td align="center">指定边框背景向盒子外部延伸的距离</td></tr><tr><td align="center">border-image-repeat</td><td align="center">指定背景图片的平埔方式</td></tr></tbody></table><h2 id="二-边框属性"><a href="#二-边框属性" class="headerlink" title="二.边框属性"></a>二.边框属性</h2><h3 id="1-内边距"><a href="#1-内边距" class="headerlink" title="1.内边距"></a>1.内边距</h3><p>1.padding-top:上边距离；</p><p>2.padding-left:左边距离；</p><p>3.padding-right：右边距离；</p><p>4.padding-bottom：底部距离；</p><p>5.padding：上内边距 【右内 下内 左内】；</p><h3 id="2-外边距"><a href="#2-外边距" class="headerlink" title="2.外边距"></a>2.外边距</h3><p>1.margin-top:上边距离；</p><p>2.margin-left:左边距离；</p><p>3.margin-right：右边距离；</p><p>4.margin-bottom：底部距离；</p><p>5.margin：上内边距 【右内 下内 左内】；</p><h3 id="3-box-shadow属性"><a href="#3-box-shadow属性" class="headerlink" title="3.box-shadow属性"></a>3.box-shadow属性</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">box-shadow:像素值1，像数值2，像素值3 像素值4 颜色值 阴影类型；<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">参素值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">像素值1</td><td align="center">表示元素水平阴影位置，必选</td></tr><tr><td align="center">像素值2</td><td align="center">表示元素垂直阴影位置，必选</td></tr><tr><td align="center">像素值3</td><td align="center">阴影模糊半径，可选</td></tr><tr><td align="center">像素值4</td><td align="center">阴影扩展半径，不可为负，可选</td></tr><tr><td align="center">颜色值</td><td align="center">阴影颜色 可选</td></tr><tr><td align="center">阴影类型</td><td align="center">内阴影(inset)/外阴影(默认)，可选</td></tr></tbody></table><h3 id="4-box-sizing属性"><a href="#4-box-sizing属性" class="headerlink" title="4.box-sizing属性"></a>4.box-sizing属性</h3><p>box-sizing属性用于定义盒子的宽度值和高度值是否包括元素的内边距和边距，其基本语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">box-sizing:content-box/border-box;<br></code></pre></td></tr></table></figure><p>1.content-box：浏览器对盒子模型的解释遵循w3c标准，当定义width和height时，它的参数值不包括border和padding。</p><p>2.border-box：当定义width和height时，border和padding的参数值被包括在width和height之内。</p><h2 id="三-背景属性"><a href="#三-背景属性" class="headerlink" title="三.背景属性"></a>三.背景属性</h2><h4 id="1-背景与图片不透明度的设置"><a href="#1-背景与图片不透明度的设置" class="headerlink" title="1.背景与图片不透明度的设置"></a>1.背景与图片不透明度的设置</h4><h5 id="1-RGBA模式"><a href="#1-RGBA模式" class="headerlink" title="1.RGBA模式"></a>1.RGBA模式</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">rgba(r,g,b,alpha);<br></code></pre></td></tr></table></figure><p>alpha参数是一个介于0.0和1.0之间的数字。</p><h5 id="2-opacity属性"><a href="#2-opacity属性" class="headerlink" title="2.opacity属性"></a>2.opacity属性</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">opacity:opacityValue;<br></code></pre></td></tr></table></figure><p>opacity用于定义元素的不透明度，介于0~1之间。</p><h5 id="3-设置背景图片片平铺"><a href="#3-设置背景图片片平铺" class="headerlink" title="3.设置背景图片片平铺"></a>3.设置背景图片片平铺</h5><p>1.repeat：沿水平与垂直两个方向平铺（默认值）。</p><p>2.no-repeat：不平铺。</p><p>3.repeat-x：只沿水平方向平铺。</p><p>4.repeat-y：只沿垂直方向平铺。</p><h5 id="5-设置背景图片的位置"><a href="#5-设置背景图片的位置" class="headerlink" title="5.设置背景图片的位置"></a>5.设置背景图片的位置</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">body&#123;<br>background-image：url(图片地址);<br>background-repeat:no-repeat;<br>background-position:right top;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="6-设置背景图像固定"><a href="#6-设置背景图像固定" class="headerlink" title="6.设置背景图像固定"></a>6.设置背景图像固定</h5><p>1.scroll：图像随页面元素一起滚动（默认值）。</p><p>2.fixed：图像固定在屏幕上，不随页面元素滚动。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">background-attachment：fixed；<br></code></pre></td></tr></table></figure><h5 id="7-设置背景图像的大小"><a href="#7-设置背景图像的大小" class="headerlink" title="7.设置背景图像的大小"></a>7.设置背景图像的大小</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">background-size:属性值1 属性值2;<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">像素值</td><td align="center">设置背景图像的高和宽，一宽二高，如果写一个，第二个默认为auto。</td></tr><tr><td align="center">百分比</td><td align="center">以父元素的百分比来设置背景图像的宽和高。同上。</td></tr><tr><td align="center">cover</td><td align="center">把背景图像扩展至足够大，是北京图像完全覆盖背景区域。背景图像的某些部分也许无法显示在背景定位区域。</td></tr><tr><td align="center">contain</td><td align="center">把图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域。</td></tr></tbody></table><h5 id="8-设置背景的显示区域"><a href="#8-设置背景的显示区域" class="headerlink" title="8.设置背景的显示区域"></a>8.设置背景的显示区域</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">background-origin:属性值;<br></code></pre></td></tr></table></figure><p>1.padding-box:背景图像相对于内边距区域来定义。</p><p>2.border-box：背景图像相对于边框来定位。</p><p>3.content-box：背景图像相对于内容来定位。</p><h5 id="9-设置背景图像的裁剪区域"><a href="#9-设置背景图像的裁剪区域" class="headerlink" title="9.设置背景图像的裁剪区域"></a>9.设置背景图像的裁剪区域</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">background-clip:属性值;<br></code></pre></td></tr></table></figure><p>1.border-box：默认值，从边框区域向外裁剪。</p><p>2.padding-box：从内边距区域向外裁剪。</p><p>3.content-box：从内容区域向外裁剪。</p><h3 id="四-CSS3渐变属性"><a href="#四-CSS3渐变属性" class="headerlink" title="四.CSS3渐变属性"></a>四.CSS3渐变属性</h3><h4 id="1-线性渐变"><a href="#1-线性渐变" class="headerlink" title="1.线性渐变"></a>1.线性渐变</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">baackground-image:linear-gradient(渐变角度，颜色值1，颜色值2，颜色值n);<br></code></pre></td></tr></table></figure><p>渐变角度：</p><p>是指水平线和渐变线之间的夹角，可以是以deg为单位的角度数值或”to”加“left” “right” “top” “bottom”</p><h4 id="2-径向渐变"><a href="#2-径向渐变" class="headerlink" title="2.径向渐变"></a>2.径向渐变</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">background-image:radial-gradient(渐变形状 圆心位置，颜色值1，颜色值n);<br></code></pre></td></tr></table></figure><h4 id="3-重复线性渐变"><a href="#3-重复线性渐变" class="headerlink" title="3.重复线性渐变"></a>3.重复线性渐变</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">background-image:repeating-linear-gradient(渐变角度，颜色值1，颜色值n);<br></code></pre></td></tr></table></figure><h4 id="4-重复径向渐变"><a href="#4-重复径向渐变" class="headerlink" title="4.重复径向渐变"></a>4.重复径向渐变</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">background-image:repeating-radial-gradient(渐变角度，颜色值1，颜色值n);<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML学习 </category>
          
          <category> css学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> css盒子模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS3选择器</title>
      <link href="/2021/06/22/HTML/CSS3%E9%80%89%E6%8B%A9%E5%99%A8/"/>
      <url>/2021/06/22/HTML/CSS3%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一-属性选则器"><a href="#一-属性选则器" class="headerlink" title="一.属性选则器"></a>一.属性选则器</h2><h3 id="1-E-att-value-属性选择器"><a href="#1-E-att-value-属性选择器" class="headerlink" title="1.E[att^=value]属性选择器"></a>1.E[att^=value]属性选择器</h3><p>E[att^=value]属性选择器是指选择名称为被E标记，且该标记定义了att属性，att属性值包含前缀为value的子字符串。需要注意的是E是可以省略的，如果省略则表示可以匹配满足条件的任意元素。例如：</p><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!doctype <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>E[att^=value]属性选择器应用<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-attr">[id^=<span class="hljs-string">&quot;one&quot;</span>]</span>&#123;</span><br><span class="css"><span class="hljs-attribute">color</span>:pink;</span><br><span class="css"><span class="hljs-attribute">font-family</span>: <span class="hljs-string">&quot;微软雅黑&quot;</span>;</span><br><span class="css"><span class="hljs-attribute">font-size</span>:<span class="hljs-number">12px</span>;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;two&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;one1&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;two1&quot;</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="2-E-att-value-属性选择器"><a href="#2-E-att-value-属性选择器" class="headerlink" title="2.E[att$=value]属性选择器"></a>2.E[att$=value]属性选择器</h3><p>E[att$=value]属性选择器是指选择名称为被E标记，且该标记定义了att属性，att属性值包含后缀为value的子字符串。需要注意的是E是可以省略的，如果省略则表示可以匹配满足条件的任意元素。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!doctype <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>E[att$=value]属性选择器应用<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-attr">[att$=<span class="hljs-string">&quot;main&quot;</span>]</span>&#123;</span><br><span class="css"><span class="hljs-attribute">color</span>:red;</span><br><span class="css"><span class="hljs-attribute">font-family</span>: dynalight;</span><br><span class="css"><span class="hljs-attribute">font-size</span>:<span class="hljs-number">20px</span>;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;old1&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;old2&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;oldmain&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;newmain&quot;</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="3-E-att-value-属性选择器"><a href="#3-E-att-value-属性选择器" class="headerlink" title="3.E[att*=value]属性选择器"></a>3.E[att*=value]属性选择器</h3><p>E[att$=value]属性选择器是指选择名称为被E标记，且该标记定义了att属性，att属性值包含value的子字符串。需要注意的是E是可以省略的，如果省略则表示可以匹配满足条件的任意元素。</p><h2 id="2-关系选择器"><a href="#2-关系选择器" class="headerlink" title="2.关系选择器"></a>2.关系选择器</h2><h3 id="1-子代选择器（-gt"><a href="#1-子代选择器（-gt" class="headerlink" title="1.子代选择器（&gt;)"></a>1.子代选择器（&gt;)</h3><p>子代选择器主要是用来选择某个元素的第一级子元素。例如希望选择只作为h1元素子元素的strong元素，可以这样写：h1&gt;strong。</p><h3 id="2-兄弟选择器（-，-）"><a href="#2-兄弟选择器（-，-）" class="headerlink" title="2.兄弟选择器（+，~）"></a>2.兄弟选择器（+，~）</h3><p>分为临近兄弟选择器和普通兄弟选择器。</p><h5 id="1-临近兄弟选择器"><a href="#1-临近兄弟选择器" class="headerlink" title="1.临近兄弟选择器"></a>1.临近兄弟选择器</h5><p>该选择器用”+“来，连接前后两个选择器。选择器中的两个元素有同一个是父亲，且第二个元素紧跟第一个元素。</p><h5 id="2-普通兄弟选择器"><a href="#2-普通兄弟选择器" class="headerlink" title="2.普通兄弟选择器"></a>2.普通兄弟选择器</h5><p>该选择器用”~“来，连接前后两个选择器。选择器中的两个元素有同一个是父亲，且第二个元素不必紧跟第一个元素。</p><h3 id="3-结构化伪类选择器"><a href="#3-结构化伪类选择器" class="headerlink" title="3.结构化伪类选择器"></a>3.结构化伪类选择器</h3><h5 id="1：root选择器"><a href="#1：root选择器" class="headerlink" title="1：root选择器"></a>1：root选择器</h5><p>：root选择器用于匹配文档根元素，在HTML中，根元素始终是html元素。也就是说使用”：root选择器“定义的样式，对所有页面元素都生效。</p><h5 id="2-：not选择器"><a href="#2-：not选择器" class="headerlink" title="2 ：not选择器"></a>2 ：not选择器</h5><p>如果对某个结构元素使用样式，但是想排除这个节构元素下面的子结构元素，让它不使用这种样式，可以用：not选择器。</p><h5 id="3-：only-child选择器"><a href="#3-：only-child选择器" class="headerlink" title="3.：only-child选择器"></a>3.：only-child选择器</h5><p>：only-child选择器用于匹配属于某父元素唯一子元素的元素，也就是说，如果某个元素仅有一个元素，则使用“：only-child选择器”可以选择该元素。</p><h5 id="4-：first-child和：last-child选择器"><a href="#4-：first-child和：last-child选择器" class="headerlink" title="4.：first-child和：last-child选择器"></a>4.：first-child和：last-child选择器</h5><p>：first-child选择器和：last-child选择器分别用于父元素中第一个元素和最后一个元素设置样式。</p><h5 id="5-：nth-child-n-和nth-last-child-n-选择器"><a href="#5-：nth-child-n-和nth-last-child-n-选择器" class="headerlink" title="5.：nth-child(n)和nth-last-child(n)选择器"></a>5.：nth-child(n)和nth-last-child(n)选择器</h5><p>用于匹配属于父元素的第n个或倒数第n个元素。</p><h5 id="6-：nth-of-type-n-和-nth-last-of-type-n-选择器"><a href="#6-：nth-of-type-n-和-nth-last-of-type-n-选择器" class="headerlink" title="6.：nth-of-type(n)和 nth-last-of-type(n)选择器"></a>6.：nth-of-type(n)和 nth-last-of-type(n)选择器</h5><p>用于匹配属于父元素的特定类型的第n个或倒数第n个子元素。</p><h5 id="7-empty选择器"><a href="#7-empty选择器" class="headerlink" title="7.:empty选择器"></a>7.:empty选择器</h5><p>：empty选择器用来选择魔友子元素或文本内容为空的所有元素。</p><h5 id="8-：target选择器"><a href="#8-：target选择器" class="headerlink" title="8.：target选择器"></a>8.：target选择器</h5><p>：target选择器用于为页面中的某个target元素指定样式。只有用户点击了页面中的超链接，并且跳转到target元素后，：target选择器所设置的样式才会起作用。</p><h2 id="四-伪元素选择器"><a href="#四-伪元素选择器" class="headerlink" title="四.伪元素选择器"></a>四.伪元素选择器</h2><p>1.：before选择器和：after选择器</p><p>必须配合content属性来指定要插入的具体内容。其基本语法为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;元素&gt;:before/after<br>&#123;<br>content:文字/url();<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="五-链接伪类"><a href="#五-链接伪类" class="headerlink" title="五.链接伪类"></a>五.链接伪类</h2><table><thead><tr><th align="center">超链接标记<a>的伪类</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">a:link{…}</td><td align="center">未访问时超链接的状态</td></tr><tr><td align="center">a:vistited{…}</td><td align="center">访问后超链接的状态</td></tr><tr><td align="center">a:hover{…}</td><td align="center">鼠标经过，悬停时超链接的状态</td></tr><tr><td align="center">a:active{…}</td><td align="center">鼠标单击不动时超链接的状态</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> HTML学习 </category>
          
          <category> css学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> css选择器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css3入门</title>
      <link href="/2021/06/20/HTML/css3%E5%85%A5%E9%97%A8/"/>
      <url>/2021/06/20/HTML/css3%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一-css核心基础"><a href="#一-css核心基础" class="headerlink" title="一.css核心基础"></a>一.css核心基础</h2><h3 id="1-css样式规则"><a href="#1-css样式规则" class="headerlink" title="1.css样式规则"></a>1.css样式规则</h3><p>选择器{属性1：属性值1；属性2：属性值2；属性3：属性值3；}</p><h5 id="在书写css样式时，除了要遵守css样式规则，还必须注意以下几个特点："><a href="#在书写css样式时，除了要遵守css样式规则，还必须注意以下几个特点：" class="headerlink" title="在书写css样式时，除了要遵守css样式规则，还必须注意以下几个特点："></a>在书写css样式时，除了要遵守css样式规则，还必须注意以下几个特点：</h5><p>1.css样式严格区分大小写，属性和值不区分大小写，按照书写习惯一般将“选择器，属性和值”都采用小写的样式。</p><p>2.多个属性之间必须用英文状态下的分号隔开，最后一个属性后的分号可以省略，但是为了便于增加信仰是最好保留。</p><p>3.如果属性的值由多个单词组成且中间有空格，则必须为这个属性值加上英文状态下的引号。</p><span id="more"></span><h3 id="2-引入css样式表"><a href="#2-引入css样式表" class="headerlink" title="2.引入css样式表"></a>2.引入css样式表</h3><h4 id="1-行内式"><a href="#1-行内式" class="headerlink" title="1.行内式"></a>1.行内式</h4><p>行内式也成为内联样式，是通过标记的style属性来设置元素的样式，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;标记名 style=&quot;属性1：属性值1；&quot;&gt;内容&lt;/标记名&gt;<br></code></pre></td></tr></table></figure><h4 id="2-内嵌式"><a href="#2-内嵌式" class="headerlink" title="2.内嵌式"></a>2.内嵌式</h4><p>内嵌式是将css代码集中写在HTML文档的<head>头部文档中，并且用<style>标记定义，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br>      选择器&#123;属性1：属性值1；属性2：属性值2；属性3：属性值3；&#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-链入式"><a href="#3-链入式" class="headerlink" title="3.链入式"></a>3.链入式</h4><p>链入式是将所有的样式放在一个或多个以.css为扩展名的外部样式表文件中，通过<link/>标记将外部样式表文件链接到HTML文档中，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;css路径名&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="该语法中，标记需要放在头部标记中，并且必须指定标记的三个属性，具体如下："><a href="#该语法中，标记需要放在头部标记中，并且必须指定标记的三个属性，具体如下：" class="headerlink" title="该语法中，标记需要放在头部标记中，并且必须指定标记的三个属性，具体如下："></a>该语法中，<link/>标记需要放在<head>头部标记中，并且必须指定<link/>标记的三个属性，具体如下：</h5><p>1.href：定义所链接外部样式表文件的URI，可以是相对路径，也可一是绝对路径。</p><p>2.type：定义所链接文档的类型，在这里需要指定为“text/css”，表示链接的外部文件为CSS样式表。</p><p>3.rel：定义当前文档与被链接文当之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件。</p><h2 id="3-css基础选择器"><a href="#3-css基础选择器" class="headerlink" title="3.css基础选择器"></a>3.css基础选择器</h2><h3 id="1-标记选择器"><a href="#1-标记选择器" class="headerlink" title="1.标记选择器"></a>1.标记选择器</h3><h5 id="标记选择器是指用HTML标记名称作为选择器，按标记名称分类，为页面中某一类标记指定统一的CSS样式。其基本语法格式为："><a href="#标记选择器是指用HTML标记名称作为选择器，按标记名称分类，为页面中某一类标记指定统一的CSS样式。其基本语法格式为：" class="headerlink" title="标记选择器是指用HTML标记名称作为选择器，按标记名称分类，为页面中某一类标记指定统一的CSS样式。其基本语法格式为："></a>标记选择器是指用HTML标记名称作为选择器，按标记名称分类，为页面中某一类标记指定统一的CSS样式。其基本语法格式为：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">标记名(属性1：属性值1；属性2：属性值2；属性3：属性值3；)<br></code></pre></td></tr></table></figure><p>该语法中，所有的HTML标记名都可以作为标记选择器，如body、h1、p、strong等。用标记选择器定义的样式对页面中该类型的所有标记都生效。<br>例如，可以使用p选择器定义HTML页面中所有段落的样式，示例代码为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">p(font-size:12px； color：#666； font-family:&quot;微软雅黑”；)<br></code></pre></td></tr></table></figure><p>上述css样式代码用于设置HTML页面中所有的段落文本——字体大小为12像素、颜色为#666、字体为微软雅黑。<br>标记选择器最大的优点是能快速为页面中同类型的标记统一样式，同时这也是它的缺点，不能设计差异化样式。</p><h3 id="2-类选择器"><a href="#2-类选择器" class="headerlink" title="2.类选择器"></a>2.类选择器</h3><p>类选择器使用“”(英文点号)进行标识，后面紧跟类名，其基本语法格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">.类名(属性1：属性值1；属性2：属性值2；属性3：属性值3；)<br></code></pre></td></tr></table></figure><h3 id="3-id选择器"><a href="#3-id选择器" class="headerlink" title="3.id选择器"></a>3.id选择器</h3><p>id选择器使用”#“进行标识，后面紧跟id 名，其基本语法格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#id 名&#123;属性1:属性值1；&#125;<br></code></pre></td></tr></table></figure><p>该语法中，id名即为HTML元素的id属性值。是唯一的。</p><h4 id="4-通配符选择器"><a href="#4-通配符选择器" class="headerlink" title="4.通配符选择器"></a>4.通配符选择器</h4><p>通配符选择器用”*“号表示，它是所有选择其中范围最广的，能匹配页面中所有的元素。其基本语法格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">*&#123;属性1:属性值1；&#125;<br></code></pre></td></tr></table></figure><h4 id="5-标签指定式选择器"><a href="#5-标签指定式选择器" class="headerlink" title="5.标签指定式选择器"></a>5.标签指定式选择器</h4><p>标签指定式选择器又称交集选择器，有两个选择器构成，第一个为标记选择器，第二个为class选择器或id选择器，两个选择器之间不能有空格，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">        <span class="hljs-selector-class">.p</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">color</span>: red;</span><br><span class="css">        &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="6-后代选择器"><a href="#6-后代选择器" class="headerlink" title="6.后代选择器"></a>6.后代选择器</h4><p>后代选择器用来选择元素或元素组的后代，其写法就是把外层标记写在前面，内层标记写在后面，中间用空格隔开。当标记发生嵌套时，内层标记就成为外层标记的后代。</p><h4 id="7-并集选择器"><a href="#7-并集选择器" class="headerlink" title="7.并集选择器"></a>7.并集选择器</h4><p>并集选择器是由各个选择器通过逗号连接形成的，任何形式的选择器，都可以作为并集选择器的一部分。如果某些选择器定义的样式完全相同或部分相同，就可以用并集选择器定义。</p><h2 id="二-文本样式属性"><a href="#二-文本样式属性" class="headerlink" title="二.文本样式属性"></a>二.文本样式属性</h2><h3 id="1-字体样式属性"><a href="#1-字体样式属性" class="headerlink" title="1.字体样式属性"></a>1.字体样式属性</h3><p>为了更好地控制页面中各式各样的字体，css引入了一系列字体属性，具体如下：</p><h4 id="1-font-size：字号大小"><a href="#1-font-size：字号大小" class="headerlink" title="1.font-size：字号大小"></a>1.font-size：字号大小</h4><p>font-size属性用于设计字号，该属性的值可以使用相对长度单位，也可以使用绝对长度单位。</p><table><thead><tr><th align="center">相对长度单位</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">em</td><td align="center">相对于当前对象内文本的字体尺寸</td></tr><tr><td align="center">px</td><td align="center">像素，最常用，推荐使用</td></tr></tbody></table><table><thead><tr><th align="center">绝对长度单位</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">in</td><td align="center">英寸</td></tr><tr><td align="center">cm</td><td align="center">厘米</td></tr><tr><td align="center">mm</td><td align="center">毫米</td></tr><tr><td align="center">pt</td><td align="center">点</td></tr></tbody></table><p>其中，相对单位长度比较常用，推荐使用像素单位px，绝对单位使用比较少。</p><h4 id="2-font-family：字体"><a href="#2-font-family：字体" class="headerlink" title="2.font-family：字体"></a>2.font-family：字体</h4><h5 id="font-family属性用于设计字体。网页中常用的字体如宋体等。设计文体可用代码如下："><a href="#font-family属性用于设计字体。网页中常用的字体如宋体等。设计文体可用代码如下：" class="headerlink" title="font-family属性用于设计字体。网页中常用的字体如宋体等。设计文体可用代码如下："></a>font-family属性用于设计字体。网页中常用的字体如宋体等。设计文体可用代码如下：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">p&#123;font-family:&quot;微软雅黑&quot;;&#125;<br></code></pre></td></tr></table></figure><h5 id="可以同时指定多个字体，中间用逗号隔开，代码如下："><a href="#可以同时指定多个字体，中间用逗号隔开，代码如下：" class="headerlink" title="可以同时指定多个字体，中间用逗号隔开，代码如下："></a>可以同时指定多个字体，中间用逗号隔开，代码如下：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">p&#123;font-family:&quot;微软雅黑&quot;,&quot;宋体&quot;，&quot;Arial&quot;;&#125;<br></code></pre></td></tr></table></figure><h5 id="使用font-family设计字体时，必须注意以下几点："><a href="#使用font-family设计字体时，必须注意以下几点：" class="headerlink" title="使用font-family设计字体时，必须注意以下几点："></a>使用font-family设计字体时，必须注意以下几点：</h5><p>1.各个字体之间必须使用英文状态的逗号隔开。</p><p>2.中文字体需要加英文状态下的引号，英文字体放最前边。</p><p>3.如果字体名包含空格，#，￥等，则该字体必须加英文状态下的单引号或双引号，</p><p>4.尽量使用系统默认字体。</p><h4 id="3-font-weight：字体粗细"><a href="#3-font-weight：字体粗细" class="headerlink" title="3.font-weight：字体粗细"></a>3.font-weight：字体粗细</h4><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>默认值。定义标准的字符</td></tr><tr><td>bold</td><td>定义粗体字符</td></tr><tr><td>bolder</td><td>定义更粗的字符</td></tr><tr><td>lighter</td><td>定义更细的字符</td></tr><tr><td>100~900（100的整数倍）</td><td>定义由细到粗的字符。其中400等同于normal，700等同于bold的，值越大字体越粗。</td></tr></tbody></table><h4 id="4-font-style：字体风格"><a href="#4-font-style：字体风格" class="headerlink" title="4.font-style：字体风格"></a>4.font-style：字体风格</h4><p>font-style属性用于定义字体风格，如设置斜体，倾斜或正常字体，其可用属性值如下。</p><p>1.normal：默认值，浏览器会显示标准的字体样式。</p><p>2.italic：浏览器会显示斜体的字体样式。</p><p>3.oblique：浏览器会显示倾斜的字体样式。</p><h4 id="5-font：综合设置字体样式"><a href="#5-font：综合设置字体样式" class="headerlink" title="5.font：综合设置字体样式"></a>5.font：综合设置字体样式</h4><p>font属性用于对字体样式进行综合设置，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">选择器&#123;font:font-style font-weight font-size/line-height font-family;&#125;<br></code></pre></td></tr></table></figure><h4 id="6-font-face属性"><a href="#6-font-face属性" class="headerlink" title="6.@font-face属性"></a>6.@font-face属性</h4><p>@font-face属性是css的新增特性，用于定义服务器字体。通过@font-face属性，开发者可以在用户计算机未安装字体时，使用任何喜欢的字体。基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">@font-face&#123;<br>font-family:字体名称；<br>src:字体路径；<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="7-word-wrap属性"><a href="#7-word-wrap属性" class="headerlink" title="7.word-wrap属性"></a>7.word-wrap属性</h4><p>word-wrap属性用于实现长单词和URL地址的自动换行，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">选择器:&#123;word-wrap:属性值;&#125;<br></code></pre></td></tr></table></figure><p>在上面的语法格式中，eord-wrap属性的取值有两种，</p><table><thead><tr><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">normal</td><td align="center">只在允许的段字点之间换行</td></tr><tr><td align="center">break-word</td><td align="center">在长单词或URL地址内部进行换行</td></tr></tbody></table><h2 id="二-文本外观属性"><a href="#二-文本外观属性" class="headerlink" title="二.文本外观属性"></a>二.文本外观属性</h2><h4 id="1-color-文本颜色"><a href="#1-color-文本颜色" class="headerlink" title="1.color:文本颜色"></a>1.color:文本颜色</h4><p>color属性用于定义文本的颜色，其取值方式有如下3种。</p><h5 id="1-预定义的颜色值，如red-green-blue等。"><a href="#1-预定义的颜色值，如red-green-blue等。" class="headerlink" title="1.预定义的颜色值，如red, green, blue等。"></a>1.预定义的颜色值，如red, green, blue等。</h5><h5 id="2-十六进制，如-FF0000，-FF6600，-29D794等。实际工作中，十六进制是最常用的定义颜色的方式。"><a href="#2-十六进制，如-FF0000，-FF6600，-29D794等。实际工作中，十六进制是最常用的定义颜色的方式。" class="headerlink" title="2.十六进制，如#FF0000，#FF6600，#29D794等。实际工作中，十六进制是最常用的定义颜色的方式。"></a>2.十六进制，如#FF0000，#FF6600，#29D794等。实际工作中，十六进制是最常用的定义颜色的方式。</h5><h5 id="3-RGB代码，如红色可以表示为rgb-255，0-0-或rgb-100-，0-，0-。"><a href="#3-RGB代码，如红色可以表示为rgb-255，0-0-或rgb-100-，0-，0-。" class="headerlink" title="3.RGB代码，如红色可以表示为rgb(255，0,0)或rgb(100%，0%，0%)。"></a>3.RGB代码，如红色可以表示为rgb(255，0,0)或rgb(100%，0%，0%)。</h5><h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><p>如果使用RGB代码的百分比颜色值，取值为0时也不能省略百分号，必须写为0%。</p><h4 id="2-letter-spacing-字间距"><a href="#2-letter-spacing-字间距" class="headerlink" title="2.letter-spacing:字间距"></a>2.letter-spacing:字间距</h4><p>letter-spacing 属性用于定义字间距，所谓字间距就是字符与字符之间的空白。其属性值可为不同单位的数值，允许使用负值，默认为normal。</p><h4 id="3-word-spacing-单词间距"><a href="#3-word-spacing-单词间距" class="headerlink" title="3.word-spacing:单词间距"></a>3.word-spacing:单词间距</h4><p>word-spacing属性用于定义英文单词之间的间距，对中文字符无效。和 letter-spacing样，其属性值可为不同单位的数值，允许使用负值，默认为normal。<br>word-spacing 和letter-spacing均可对英文进行设置。不同的是letter-spacing定义的为字母之间的间距，而 word-spacing定义的为英文单词之间的间距。</p><h4 id="4-line-height：行间距"><a href="#4-line-height：行间距" class="headerlink" title="4.line-height：行间距"></a>4.line-height：行间距</h4><p>line-height属性间用于设置行间距，一般有三种，分别是像素px，相对值em，和百分比100%。</p><h4 id="5-text-transform-文本转换"><a href="#5-text-transform-文本转换" class="headerlink" title="5.text-transform:文本转换"></a>5.text-transform:文本转换</h4><p>text-transform属性用于控制英文字符的大小写，其可用属性值如下。<br>1.none：不转换(默认值)。<br>2.capitalize：首字母大写。<br>3.uppercase：全部字符转换为大写。<br>4.lowercase：全部字符转换为小写。</p><h4 id="6-text-decoration-文本装饰"><a href="#6-text-decoration-文本装饰" class="headerlink" title="6.text-decoration:文本装饰"></a>6.text-decoration:文本装饰</h4><p>text-decoration属性用于设置文本的下划线、上划线、删除线等装饰效果，其可用属性值如下。<br>1.none：没有装饰(正常文本默认值)。<br>2.underline：下划线。<br>3.overline：上划线。<br>4.line-through:删除线。<br>text-decoration后可以赋多个值，用于给文本添加多种显示效果。例如希望文字同时有下划线和删除线效果，就可以将underline和line-through 同时赋给text-decoration。</p><h4 id="7-text-align-水平对齐方式"><a href="#7-text-align-水平对齐方式" class="headerlink" title="7.text-align:水平对齐方式"></a>7.text-align:水平对齐方式</h4><p>text-align属性用于设置文本内容的水平对齐，其可用属性如下：</p><p>1.left：左对齐。</p><p>2.right：右对齐。</p><p>3.center:居中对齐。</p><h4 id="8-text-indent：首行缩进"><a href="#8-text-indent：首行缩进" class="headerlink" title="8.text-indent：首行缩进"></a>8.text-indent：首行缩进</h4><p>text-indent属性用于设置首行文本缩进，其属性值可为不同单位的数值，em字符宽度的倍数，或相对于浏览器窗口宽度的百分比，允许使用负值。</p><p>注：</p><p>text-indent属性仅适用于块级元素，对行内元素无效。</p><h4 id="9-white-space-空白符处理"><a href="#9-white-space-空白符处理" class="headerlink" title="9.white-space:空白符处理"></a>9.white-space:空白符处理</h4><p>使用HTML制作网页时，不论源代码中有多少空格，在浏览器中只会显示一个字符的空白。在CSS中，使用white-space属性可设置空白符的处理方式，其属性值如下。<br>1.normal：常规（默认值），文本中的空格、空行无效，满行（到达区域边界）后自动换行。<br>2.pre：预格式化，按文档的书写格式保留空格、空行原样显示。<br>3.nowrap：空格空行无效，强制文本不能换行，除非遇到换行标记<br/>。内容超出元素的边界也不换行，若超出浏览器页面则会自动增加滚动条。</p><h4 id="10-text-shadow：阴影效果"><a href="#10-text-shadow：阴影效果" class="headerlink" title="10.text-shadow：阴影效果"></a>10.text-shadow：阴影效果</h4><p>在css中，使用text-shadow属性可以为页面中的文本添加阴影效果，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">选择器&#123;text-shadow:h-shadow v-shadow blur color;&#125;<br></code></pre></td></tr></table></figure><h4 id="11-text-overflow-标识对象内容溢出文本"><a href="#11-text-overflow-标识对象内容溢出文本" class="headerlink" title="11.text-overflow:标识对象内容溢出文本"></a>11.text-overflow:标识对象内容溢出文本</h4><p>其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">选择器&#123;text-overflow:属性值;&#125;<br></code></pre></td></tr></table></figure><p>在上面的语法格式中，text-overflow属性的常用取值有两个，具体如下：</p><p>1.clip：修建溢出文本，不显示省略标记。</p><p>2.ellipsis：用省略标记“….”标示被修剪文本，省略标记插入的位置是最后一个字符。</p><p>3.white-space：nowrap：样式强制文本不能换行。</p><p>4.overflow：hidden：样式隐藏溢出文本。</p><p>5.text-overflow：ellipsis：样式显示省略标记。</p>]]></content>
      
      
      <categories>
          
          <category> HTML学习 </category>
          
          <category> css学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> css入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5页面元素及属性</title>
      <link href="/2021/06/19/HTML/HTML5%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E5%8F%8A%E5%B1%9E%E6%80%A7/"/>
      <url>/2021/06/19/HTML/HTML5%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E5%8F%8A%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="一-列表元素"><a href="#一-列表元素" class="headerlink" title="一.列表元素"></a>一.列表元素</h2><h3 id="1-ul元素"><a href="#1-ul元素" class="headerlink" title="1.ul元素"></a>1.ul元素</h3><p>无序列表是网页中最常用的列表，其各个列表项之间模有顺序级别之分，通常是并列的。定于无序列表的基本语法为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p>li标记嵌套在ul标记中，每对ul中至少包含一对li。</p><span id="more"></span><h3 id="2-ol元素"><a href="#2-ol元素" class="headerlink" title="2.ol元素"></a>2.ol元素</h3><p>有序列表即为有序列表，其各个列表像按照一定顺序排序，定义有序列表的基本语法为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><p>li标记嵌套在ol标记中，每对ol中至少包含一对li。</p><p>在HTML中该元素还拥有start属性和reversed属性，其中start属性可以更改列表编号得起始值，reversed属性表示是否对列表进行反向排序，默认值为true。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span> <span class="hljs-attr">start</span>=<span class="hljs-string">&quot;2&quot;</span> &gt;</span><br></code></pre></td></tr></table></figure><p>从上可以看出，列表编号的起始值更改为2.</p><h3 id="3-dl元素"><a href="#3-dl元素" class="headerlink" title="3.dl元素"></a>3.dl元素</h3><p>定于列表常用于对术语或名词进行解释和描述，与有序和无序列表不同，定义列表的列表项前莫有任何项目符号。其基本语法为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span><br></code></pre></td></tr></table></figure><p>dl标记用于指定定义列表，dt和dd并列嵌套在dl标记中，其中，dt标记用于指定术语名词。dd标记用于对名词进行解释和描述。一对dt可以对应多个dd。</p><h3 id="4-列表的嵌套使用"><a href="#4-列表的嵌套使用" class="headerlink" title="4.列表的嵌套使用"></a>4.列表的嵌套使用</h3><p>在使用列表时，列表项中也有可能包含若干个子列表项，要想在列表项中定义子列表项就需要对列表进行嵌套。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>             <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>         <span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="二-结构元素"><a href="#二-结构元素" class="headerlink" title="二.结构元素"></a>二.结构元素</h2><h3 id="1-header元素"><a href="#1-header元素" class="headerlink" title="1.header元素"></a>1.header元素</h3><p>HTML5中的header元素是一种具有引导和导航作用的结构元素，该元素可以包含所有通常放在页面头部的内容。header元素通常放置整个页面的标题等。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><p>header元素并非head元素。在HTML页面中，并不限制header元素的个数，一个页面中可以有多个header元素。</p><h3 id="2-nav元素"><a href="#2-nav元素" class="headerlink" title="2.nav元素"></a>2.nav元素</h3><p>nav元素用于定义导航链接，该元素可以将具有导航性质的链接归纳在一个区域，是页面元素的寓意更加明确。其中的导航元素乐意链接到站点的其他页面，或者页面的其他部分。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在上面这段代码中，通过在nav元素内部嵌套无序列表ul来搭建导航结构。通常，一个HTML页面中可以包含多个nav元素，作为页面整体或不同部分的导航。具体来说，nav元素可以用于以下几种场合。</p><h5 id="传统导航条：目前主流网站上都有不同层级的导航条，其作用是跳转到网站的其他主页面。"><a href="#传统导航条：目前主流网站上都有不同层级的导航条，其作用是跳转到网站的其他主页面。" class="headerlink" title="传统导航条：目前主流网站上都有不同层级的导航条，其作用是跳转到网站的其他主页面。"></a>传统导航条：目前主流网站上都有不同层级的导航条，其作用是跳转到网站的其他主页面。</h5><h5 id="侧边栏导航：目前主流博客网站及电商网站都有侧边栏导航，目的是将当前文章或当前商品页面跳转到其他文章或其他商品页面。"><a href="#侧边栏导航：目前主流博客网站及电商网站都有侧边栏导航，目的是将当前文章或当前商品页面跳转到其他文章或其他商品页面。" class="headerlink" title="侧边栏导航：目前主流博客网站及电商网站都有侧边栏导航，目的是将当前文章或当前商品页面跳转到其他文章或其他商品页面。"></a>侧边栏导航：目前主流博客网站及电商网站都有侧边栏导航，目的是将当前文章或当前商品页面跳转到其他文章或其他商品页面。</h5><h5 id="页内导航：它的作用是在本页面几个主要的组成部分之间进行跳转。"><a href="#页内导航：它的作用是在本页面几个主要的组成部分之间进行跳转。" class="headerlink" title="页内导航：它的作用是在本页面几个主要的组成部分之间进行跳转。"></a>页内导航：它的作用是在本页面几个主要的组成部分之间进行跳转。</h5><h5 id="翻页操作：翻页操作切换的是网页的内容部分，可以通过单击“上一页”或“下一页”切换，也可以通过单击实际的页数跳转到某一页。"><a href="#翻页操作：翻页操作切换的是网页的内容部分，可以通过单击“上一页”或“下一页”切换，也可以通过单击实际的页数跳转到某一页。" class="headerlink" title="翻页操作：翻页操作切换的是网页的内容部分，可以通过单击“上一页”或“下一页”切换，也可以通过单击实际的页数跳转到某一页。"></a>翻页操作：翻页操作切换的是网页的内容部分，可以通过单击“上一页”或“下一页”切换，也可以通过单击实际的页数跳转到某一页。</h5><p>除了以上几点以外，nav元素也可以用于其他重要的、基本的导航链接组中。</p><h3 id="3-article元素"><a href="#3-article元素" class="headerlink" title="3.article元素"></a>3.article元素</h3><p>article元素代表文档，页面或者应用程序中与上下文不相关的独立部分，该元素通常被用于定义一篇文章等，article元素通常使用多个section元素进行划分页面，可以出现多次。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span><br>           ..<br>       <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="4-aside元素"><a href="#4-aside元素" class="headerlink" title="4.aside元素"></a>4.aside元素</h3><p>aside元素用来定义当前页面或者文章的附属信息部分，它可以包含与当前页面或主要内容相关的部分等。</p><h5 id="aside元素的用法主要分为两种："><a href="#aside元素的用法主要分为两种：" class="headerlink" title="aside元素的用法主要分为两种："></a>aside元素的用法主要分为两种：</h5><p>1.被包含在article元素内作为主要内容的附属信息。</p><p>2.在article元素之外使用，作为页面或站点全局的附属信息部分。最常用的使用方式是侧边栏，其中的友情内容可以是友情链接等。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span><br>          ..<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="5-section元素"><a href="#5-section元素" class="headerlink" title="5.section元素"></a>5.section元素</h3><p>section元素用于对网站或应用程序中页面上的内容进行分块，一个section元素通常由内容跟标题组成。在使用section元素时，需要主要：</p><h5 id="1-section-元素用于对网站或应用程序中页面容器，那是div的特性。section元素并非一个普通的容器元素，当一个容器需要被直接定义样式或通过脚本定义行为时，推荐用div。"><a href="#1-section-元素用于对网站或应用程序中页面容器，那是div的特性。section元素并非一个普通的容器元素，当一个容器需要被直接定义样式或通过脚本定义行为时，推荐用div。" class="headerlink" title="1.section 元素用于对网站或应用程序中页面容器，那是div的特性。section元素并非一个普通的容器元素，当一个容器需要被直接定义样式或通过脚本定义行为时，推荐用div。"></a>1.section 元素用于对网站或应用程序中页面容器，那是div的特性。section元素并非一个普通的容器元素，当一个容器需要被直接定义样式或通过脚本定义行为时，推荐用div。</h5><h5 id="2-如果article元素、aside元素或nav元素更符合使用条件，那么不要使用section元素。"><a href="#2-如果article元素、aside元素或nav元素更符合使用条件，那么不要使用section元素。" class="headerlink" title="2.如果article元素、aside元素或nav元素更符合使用条件，那么不要使用section元素。"></a>2.如果article元素、aside元素或nav元素更符合使用条件，那么不要使用section元素。</h5><h5 id="3-没有标题的内容区块不要使用-section-元素定义。"><a href="#3-没有标题的内容区块不要使用-section-元素定义。" class="headerlink" title="3.没有标题的内容区块不要使用 section 元素定义。"></a>3.没有标题的内容区块不要使用 section 元素定义。</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="6-footer元素"><a href="#6-footer元素" class="headerlink" title="6.footer元素"></a>6.footer元素</h3><p>footer元素用于定义一个页面或者区域的底部，它可以包含所有通常放在页面底部的内容。与header元素相同，一个页面可以包含多个footer元素。同时也可以在article元素和section元素中添加footer元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span>  <br> <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="三-分组元素"><a href="#三-分组元素" class="headerlink" title="三.分组元素"></a>三.分组元素</h2><h3 id="1-figure元素和figcaption元素"><a href="#1-figure元素和figcaption元素" class="headerlink" title="1.figure元素和figcaption元素"></a>1.figure元素和figcaption元素</h3><p>figure元素用于定义独立的流内容，一般指一个单独的单元。figure元素的内容应该与主内容相关，但如果被删除也不受影响。fig caption元素用于为figure元素组添加标题，一个figure元素内最多允许一个fig caption元素，该元素放在figure元素的第一个或最后一个元素的位置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">figure</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">figcaption</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>..<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">figcaption</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-hgroup元素"><a href="#2-hgroup元素" class="headerlink" title="2.hgroup元素"></a>2.hgroup元素</h3><p>hgroup元素用于定义将多个标题组成一个标题组。通常它与h1~h6元素组合使用。通常，将hgroup元素放在header元素中。</p><h5 id="在使用hgroup元素是要注意以下几点："><a href="#在使用hgroup元素是要注意以下几点：" class="headerlink" title="在使用hgroup元素是要注意以下几点："></a>在使用hgroup元素是要注意以下几点：</h5><p>1.如果只有一个标题元素时不建议使用hgroup元素。</p><p>2.当出现一个或者一个以上标题与元素时，建议使用hgroup元素作为标题元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">hgroup</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">hgroup</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="四-页面交互元素"><a href="#四-页面交互元素" class="headerlink" title="四.页面交互元素"></a>四.页面交互元素</h2><h3 id="1-details元素和summary元素"><a href="#1-details元素和summary元素" class="headerlink" title="1.details元素和summary元素"></a>1.details元素和summary元素</h3><p>details元素用于描述文档或文档某个部分的描述。summary元素经常与details元素配合使用，作为details元素的第一个子元素，用于为details定义标题。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">details</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">summary</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">summary</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">details</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-progress元素"><a href="#2-progress元素" class="headerlink" title="2.progress元素"></a>2.progress元素</h3><p>progress元素用于表示一个任务的完成进度。这个进度可以是不确定的，只是表示进度正在进行，但是不清楚还有多少莫有完成。</p><h5 id="progress元素的常用属性值有两个"><a href="#progress元素的常用属性值有两个" class="headerlink" title="progress元素的常用属性值有两个"></a>progress元素的常用属性值有两个</h5><p>1.value：已经完成的工作量。</p><p>2.max5： 总共有多少工作量。</p><h3 id="3-meter元素"><a href="#3-meter元素" class="headerlink" title="3.meter元素"></a>3.meter元素</h3><p>meter元素用于表示指定范围内的数值。meter元素有多个属性值：</p><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">high</td><td align="center">定义度量的值位于哪个点被界定为高的值</td></tr><tr><td align="center">low</td><td align="center">定义度量的值位于哪个点被界定为低的值</td></tr><tr><td align="center">max</td><td align="center">定义最大值，默认为1</td></tr><tr><td align="center">min</td><td align="center">定义最小值，默认为0</td></tr><tr><td align="center">optimum</td><td align="center">定义什么样的度量值是最佳度量值，如果该值高于high属性，则意味着值越高越好。如果该值低于low属性的值，则意味着越低越好</td></tr><tr><td align="center">value</td><td align="center">定义度量得值</td></tr></tbody></table><h2 id="五-文本层次语义元素"><a href="#五-文本层次语义元素" class="headerlink" title="五.文本层次语义元素"></a>五.文本层次语义元素</h2><h3 id="1-time元素"><a href="#1-time元素" class="headerlink" title="1.time元素"></a>1.time元素</h3><p>time元素用于定义时间或日期，time元素有两个属性：</p><h5 id="1-datetime-用于定义相应的时间或日期。"><a href="#1-datetime-用于定义相应的时间或日期。" class="headerlink" title="1.datetime :用于定义相应的时间或日期。"></a>1.datetime :用于定义相应的时间或日期。</h5><h5 id="2-pubdate：用于定义time元素的日期、时间是发布日期。"><a href="#2-pubdate：用于定义time元素的日期、时间是发布日期。" class="headerlink" title="2.pubdate：用于定义time元素的日期、时间是发布日期。"></a>2.pubdate：用于定义time元素的日期、时间是发布日期。</h5><h3 id="2-mark元素"><a href="#2-mark元素" class="headerlink" title="2.mark元素"></a>2.mark元素</h3><p>mark元素的主要功能是在文本中高亮显示某些字符，易引起用户关注，该元素的用法和em和strong有相似之处，但mark更加灵活。</p><h3 id="3-cite元素"><a href="#3-cite元素" class="headerlink" title="3.cite元素"></a>3.cite元素</h3><p>cite元素可以创建一个引用标记，用于对文档参考文献的引用说明，一旦使用会以斜体展示出来。</p><h2 id="六-全局属性"><a href="#六-全局属性" class="headerlink" title="六.全局属性"></a>六.全局属性</h2><h3 id="1-draggable属性"><a href="#1-draggable属性" class="headerlink" title="1.draggable属性"></a>1.draggable属性</h3><p>drag gable属性用来定义元素是否可以拖动，该属性有两个值：true和false，默认为false，当值为true时表示元素可以拖动。</p><h3 id="2-hidden属性"><a href="#2-hidden属性" class="headerlink" title="2.hidden属性"></a>2.hidden属性</h3><p>该元素有两个属性值：true和false。当hidden属性取值为true时，元素会被隐藏，反之会显示。</p><h3 id="3-spellcheck属性"><a href="#3-spellcheck属性" class="headerlink" title="3.spellcheck属性"></a>3.spellcheck属性</h3><p>spellcheck属性主要针对于input元素和textarea文本输入框，对用户输入的文本内容进行拼写和语法检测。</p><p>他有两个属性值：true和false，当值为true是会检测输入框中的值，反之不检测。</p><h3 id="4-contenteditable属性"><a href="#4-contenteditable属性" class="headerlink" title="4.contenteditable属性"></a>4.contenteditable属性</h3><p>contenteditable属性规定是否可编辑元素的内容，但是前提是该元素必须可以获取鼠标焦点并且其内容不是只读的。给属性也有两个值：true表示可以编辑，false表示不可编辑。</p>]]></content>
      
      
      <categories>
          
          <category> HTML学习 </category>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 初识HTML5 </tag>
            
            <tag> HTML5页面元素及属性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识HTML</title>
      <link href="/2021/06/19/HTML/%E5%88%9D%E8%AF%86HTML/"/>
      <url>/2021/06/19/HTML/%E5%88%9D%E8%AF%86HTML/</url>
      
        <content type="html"><![CDATA[<h2 id="一-HTML5头部相关标记"><a href="#一-HTML5头部相关标记" class="headerlink" title="一.HTML5头部相关标记"></a>一.HTML5头部相关标记</h2><h3 id="1-设置页面标题标记"><a href="#1-设置页面标题标记" class="headerlink" title="1.设置页面标题标记"></a>1.设置页面标题标记</h3><p>在HTML中&lt;!title&gt;标记用于定义html页面的标题，即给网页取一个名字，必须位于&lt;！head&gt;标记之内。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!doctype <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>这是我的第一个网页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>   这是我的第一个HTML5页面哦<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><span id="more"></span><h3 id="2-引用外部文件标记"><a href="#2-引用外部文件标记" class="headerlink" title="2.引用外部文件标记"></a>2.引用外部文件标记</h3><p>一个页面往往需要多个外部文件的配合，在&lt;!head&gt;中使用&lt;!link&gt;标记便可实现，一个页面可以使用多个哦。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;strlesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">herf</span>=<span class="hljs-string">&quot;style.css&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-内嵌式标记-lt-！style-gt"><a href="#3-内嵌式标记-lt-！style-gt" class="headerlink" title="3.内嵌式标记&lt;！style&gt;"></a>3.内嵌式标记&lt;！style&gt;</h3><h4 id="位于-lt-head-gt-头部标记中，其基本语法格式为："><a href="#位于-lt-head-gt-头部标记中，其基本语法格式为：" class="headerlink" title="位于&lt;!head&gt;头部标记中，其基本语法格式为："></a>位于&lt;!head&gt;头部标记中，其基本语法格式为：</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> 属性=<span class="hljs-string">&quot;属性值&quot;</span>&gt;</span>样式内容<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="二-文本控制标记"><a href="#二-文本控制标记" class="headerlink" title="二.文本控制标记"></a>二.文本控制标记</h1><h3 id="1-标题与段落标记"><a href="#1-标题与段落标记" class="headerlink" title="1.标题与段落标记"></a>1.标题与段落标记<hn></h3><p>为了使页面具有语义化，我们经常在页面中用到标题标记，html提供了6个的等级的标题，即&lt;!h1&gt;,&lt;!h2&gt;,&lt;!h3&gt;,&lt;!h4&gt;,&lt;!h5&gt;,&lt;!h6&gt;,其基本语法格式为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">hn</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;对齐方式&quot;</span> &gt;</span>标题文本<span class="hljs-tag">&lt;/<span class="hljs-name">hn</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-段落标记-lt-p-gt"><a href="#2-段落标记-lt-p-gt" class="headerlink" title="2.段落标记&lt;!p&gt;"></a>2.段落标记&lt;!p&gt;</h3><p>在网页中要把文字有条理的显示出来，离不开段落标记，而段落标记就是&lt;!p&gt;。其基本语法格式为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;对齐方式&quot;</span>&gt;</span>段落文本<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-水平线标记"><a href="#3-水平线标记" class="headerlink" title="3.水平线标记"></a>3.水平线标记<!hr /></h3><p>在网页中常常看到一些水平线将段落与段落隔开，<!hr /> 就是创建横跨网页水平线的标记。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> 属性=<span class="hljs-string">”属性值/</span>&gt;</span><br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">属性名</th><th align="center">含义</th><th align="center">属性值</th></tr></thead><tbody><tr><td align="center">align</td><td align="center">设置水平线的对齐方式</td><td align="center">可选择left,right,center三种值，默认为center，居中对齐</td></tr><tr><td align="center">size</td><td align="center">设置水平线的粗细</td><td align="center">以像素为单位，默认为2像素</td></tr><tr><td align="center">color</td><td align="center">设置水平线的颜色</td><td align="center">可用颜色名称，十六进制#RGB，rgb(r,g,b)</td></tr><tr><td align="center">width</td><td align="center">设置水平线的宽度</td><td align="center">可以是确定的像素值，也可以是浏览器窗口的百分比，默认为100%</td></tr></tbody></table><h3 id="4-文本格式化标记"><a href="#4-文本格式化标记" class="headerlink" title="4.文本格式化标记"></a>4.文本格式化标记</h3><p>在网页中，有时需要为文本设计粗体，斜体或下划线效果，为此HTML准备了专门的文本格式化标记，是文字以特殊的形式展示，常用标记如下表：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html">|            标记            |                        显示效果                         |<br>| :----------------------- : | :-----------------------------------------------------: |<br>| <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>和<span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> | 文本以粗体方式展示（b定义文本粗体，strong定义强调文本） |<br>|     <span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>和<span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span>     |    文字以斜体方式显示（i定义斜体字，em定义强调文本）    |<br>|    <span class="hljs-tag">&lt;<span class="hljs-name">s</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">s</span>&gt;</span>和<span class="hljs-tag">&lt;<span class="hljs-name">del</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">del</span>&gt;</span>    |       文字以加删除线方式显示（HTML5不赞成使用s）        |<br>|    <span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span>和<span class="hljs-tag">&lt;<span class="hljs-name">ins</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ins</span>&gt;</span>    |       文字以加下划线方式显示（HTML5不赞成使用u）        |<br><br>## <br></code></pre></td></tr></table></figure><h2 id="三-图像标记"><a href="#三-图像标记" class="headerlink" title="三 .图像标记"></a>三 .图像标记</h2><h3 id="1-图像标记img"><a href="#1-图像标记img" class="headerlink" title="1.图像标记img"></a>1.图像标记img</h3><p>HTML网页中任何元素的实现都要依靠html标记，要想在网页中显示图像就需要使用图像标记，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;图像路径&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h4 id="该语法中src属性用于指定图像文件的路径和文件名，它是img的必须属性。"><a href="#该语法中src属性用于指定图像文件的路径和文件名，它是img的必须属性。" class="headerlink" title="该语法中src属性用于指定图像文件的路径和文件名，它是img的必须属性。"></a>该语法中src属性用于指定图像文件的路径和文件名，它是img的必须属性。</h4><table><thead><tr><th align="center">属性</th><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">src</td><td align="center">URL</td><td align="center">图像的路径</td></tr><tr><td align="center">alt</td><td align="center">文本</td><td align="center">图像不能显示时的替换文本</td></tr><tr><td align="center">title</td><td align="center">文本</td><td align="center">鼠标悬停时显示的内容</td></tr><tr><td align="center">width</td><td align="center">像素</td><td align="center">设置图像的宽度</td></tr><tr><td align="center">height</td><td align="center">像素</td><td align="center">设置图像的高度</td></tr><tr><td align="center">border</td><td align="center">数字</td><td align="center">设置图像边框的宽度</td></tr><tr><td align="center">vspace</td><td align="center">像素</td><td align="center">设置图像顶部和底部的空白（垂直边距）</td></tr><tr><td align="center">hspace</td><td align="center">像素</td><td align="center">设置图像左侧和右侧的空白（水平边距）</td></tr><tr><td align="center">align</td><td align="center">left</td><td align="center">将图像对齐到左边</td></tr><tr><td align="center"></td><td align="center">right</td><td align="center">将图像对齐到右边</td></tr><tr><td align="center"></td><td align="center">top</td><td align="center">将图像的顶端和文本的第一行文字对齐，其他文字居图 像下方</td></tr><tr><td align="center"></td><td align="center">middle</td><td align="center">将图像的水平中线和文本的第一行文字对齐，其他文字 居图像下方</td></tr><tr><td align="center"></td><td align="center">bottom</td><td align="center">将图像的底部和文本的第一行文字对齐，其他文字居图 像下方</td></tr></tbody></table><h3 id="2-图像的宽度、高度属性width、height"><a href="#2-图像的宽度、高度属性width、height" class="headerlink" title="2.图像的宽度、高度属性width、height"></a>2.图像的宽度、高度属性width、height</h3><p>通常情况下，如果不给img标记设置宽和高，图片就会按照它的原始尺寸显示，当然也可以手动更改图片的大小。width和height属性用来定义图片的宽度和高度，通常我们只设置其中的一个，另一个会按原图等比例显示。如果同时设置两个属性，且其比例和原图大小的比例不一致，显示的图像就会变形或失真。</p><h3 id="3-图像的边框属性-border"><a href="#3-图像的边框属性-border" class="headerlink" title="3.图像的边框属性 border"></a>3.图像的边框属性 border</h3><p>默认情况下图像是没有边框的，通过border属性可以为图像添加边框、设置边框的宽度，但边框颜色的调整仅仅通过HTML属性是不能够实现的。</p><h3 id="4-图像的边距属性vspace-和hspace"><a href="#4-图像的边距属性vspace-和hspace" class="headerlink" title="4.图像的边距属性vspace 和hspace"></a>4.图像的边距属性vspace 和hspace</h3><p>在网页中，由于排版需要，有时候还需要调整图像的边距。HTML 中通过 vspace和 hspace属性可以分别调整图像的垂直边距和水平边</p><h3 id="5-图像的对齐属性align"><a href="#5-图像的对齐属性align" class="headerlink" title="5.图像的对齐属性align"></a>5.图像的对齐属性align</h3><p>图文混排是网页中很常见的效果，默认情况下图像的底部会和相对于文本的第一行文字对齐。但是在制作网页时经常需要实现其他的这就需要使用图像和文字环绕效果。这就需要使用图像的对齐属性align。</p><h2 id="四-超链接标记"><a href="#四-超链接标记" class="headerlink" title="四 .超链接标记"></a>四 .超链接标记</h2><h3 id="1-创建超链接"><a href="#1-创建超链接" class="headerlink" title="1.创建超链接"></a>1.创建超链接</h3><p>超链接虽然在网页中占有不可替代的地位，但是在HTML中创建超链接非常简单，只需要用a标记环绕需要被链接的对象即可，其基本语法格式如下:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">herf</span>=<span class="hljs-string">&quot;跳转目标&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;目标窗口的弹出方式&quot;</span>&gt;</span>文本或图像<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在上面的语法中，a标记用于定义超链接，href和target为其常用属性，具体解释如下：</p><p>（1）href:用于指定超链接目标的url地址，当为a标记应用href属性时，他就具有了超链接的功能。</p><p>（2）target：用于指定链接页面的打开方式，其取值有_self和_blank两种，其中_self为默认值，意为在原窗口打开，_blank位在新窗口打开。</p>]]></content>
      
      
      <categories>
          
          <category> HTML学习 </category>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 初识HTML5 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
